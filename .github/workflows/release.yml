name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
          - platform: 'ubuntu-24.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Clear Tauri cache and ensure fresh icons
        shell: bash
        run: |
          rm -rf src-tauri/target
          rm -rf ~/.cargo/registry/cache || true
          echo "Cleared Tauri build cache to ensure fresh icon build"

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Verify icon files before build
        shell: bash
        run: |
          echo "=== Verifying icon files exist and are current ==="
          ls -la src-tauri/icons/
          echo "Icon file sizes:"
          if command -v stat >/dev/null 2>&1; then
            if stat -c "%n: %s bytes" src-tauri/icons/icon.png 2>/dev/null; then
              stat -c "%n: %s bytes" src-tauri/icons/icon.png src-tauri/icons/icon.icns src-tauri/icons/32x32.png src-tauri/icons/128x128.png src-tauri/icons/128x128@2x.png 2>/dev/null || true
            else
              stat -f "%N: %z bytes" src-tauri/icons/icon.png src-tauri/icons/icon.icns src-tauri/icons/32x32.png src-tauri/icons/128x128.png src-tauri/icons/128x128@2x.png 2>/dev/null || true
            fi
          else
            echo "stat command not available, listing files only"
          fi
          echo "=== Icon verification complete ==="

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'DarkroomPro ${{ github.ref_name }}'
          releaseBody: |
            ## ðŸ§ª DarkroomPro ${{ github.ref_name }}
            
            Professional Film Development Calculator with Rust-powered precision.
            
            ### ðŸ“¥ Downloads
            - **macOS**: Download the `.dmg` file for your architecture
            - **Windows**: Download the `.msi` installer
            - **Linux**: Download the `.deb` or `.rpm` package
            
            ### âœ¨ Features
            - 36+ film stocks with comprehensive database
            - 17+ developers with precise dilution ratios
            - Temperature compensation (15-30Â°C)
            - Push/pull processing (Â±3 stops)
            - Built-in development timer
            - Export functionality (JSON, CSV, PDF)
            - Cross-platform desktop apps
            
            ### ðŸ”§ Technical
            - Rust-powered calculation engine
            - Type-safe data handling
            - Decimal precision arithmetic
            - Graceful web fallback
            
            See the [README](https://github.com/Panolix/DarkroomPro/blob/main/README.md) for installation instructions.
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

